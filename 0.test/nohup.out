Starting Sequence Encoding Benchmark System
============================================================
Loading dataset from csvtest.csv...
Dataset loaded successfully: 25000 sequences
Columns: ['Unnamed: 0', 'aligned_sequence', 'padded_sequences']
AS (Aligned) sequences: min=3200, max=3200, avg=3200.0
PS (Padded) sequences: min=1600, max=1600, avg=1600.0
Will test with sample sizes: [5000, 10000, 15000, 20000, 25000]

Processing sample size: 5000
Sampled 5000 sequences from dataset
  AS sequence length: 3200 bp
  PS sequence length: 1600 bp
  Processing 16 encoding methods with 40 runs each...
    Benchmarking AS-One Hot...
    Benchmarking AS-K-mers...
    Benchmarking AS-FFT...
    Benchmarking AS-Wavelet...
    Benchmarking PS-One Hot...
    Benchmarking PS-K-mers...
    Benchmarking PS-FFT...
    Benchmarking PS-Wavelet...
    Computing hybrid encodings...
    Benchmarking AS-K-mers + FFT...
    Benchmarking AS-One Hot + FFT...
    Benchmarking AS-K-mers + Wavelet...
    Benchmarking AS-One Hot + Wavelet...
    Benchmarking PS-K-mers + FFT...
    Benchmarking PS-One Hot + FFT...
    Benchmarking PS-K-mers + Wavelet...
    Benchmarking PS-One Hot + Wavelet...

Processing sample size: 10000
Sampled 10000 sequences from dataset
  AS sequence length: 3200 bp
  PS sequence length: 1600 bp
  Processing 16 encoding methods with 40 runs each...
    Benchmarking AS-One Hot...
    Benchmarking AS-K-mers...
    Benchmarking AS-FFT...
    Benchmarking AS-Wavelet...
    Benchmarking PS-One Hot...
    Benchmarking PS-K-mers...
    Benchmarking PS-FFT...
    Benchmarking PS-Wavelet...
    Computing hybrid encodings...
    Benchmarking AS-K-mers + FFT...
    Benchmarking AS-One Hot + FFT...
    Benchmarking AS-K-mers + Wavelet...
    Benchmarking AS-One Hot + Wavelet...
    Benchmarking PS-K-mers + FFT...
    Benchmarking PS-One Hot + FFT...
    Benchmarking PS-K-mers + Wavelet...
    Benchmarking PS-One Hot + Wavelet...

Processing sample size: 15000
Sampled 15000 sequences from dataset
  AS sequence length: 3200 bp
  PS sequence length: 1600 bp
  Processing 16 encoding methods with 40 runs each...
    Benchmarking AS-One Hot...
    Benchmarking AS-K-mers...
    Benchmarking AS-FFT...
    Benchmarking AS-Wavelet...
    Benchmarking PS-One Hot...
    Benchmarking PS-K-mers...
    Benchmarking PS-FFT...
    Benchmarking PS-Wavelet...
    Computing hybrid encodings...
    Benchmarking AS-K-mers + FFT...
    Benchmarking AS-One Hot + FFT...
    Benchmarking AS-K-mers + Wavelet...
    Benchmarking AS-One Hot + Wavelet...
    Benchmarking PS-K-mers + FFT...
    Benchmarking PS-One Hot + FFT...
    Benchmarking PS-K-mers + Wavelet...
    Benchmarking PS-One Hot + Wavelet...

Processing sample size: 20000
Sampled 20000 sequences from dataset
  AS sequence length: 3200 bp
  PS sequence length: 1600 bp
  Processing 16 encoding methods with 40 runs each...
    Benchmarking AS-One Hot...
    Benchmarking AS-K-mers...
    Benchmarking AS-FFT...
    Benchmarking AS-Wavelet...
    Benchmarking PS-One Hot...
    Benchmarking PS-K-mers...
    Benchmarking PS-FFT...
    Benchmarking PS-Wavelet...
    Computing hybrid encodings...
    Benchmarking AS-K-mers + FFT...
    Benchmarking AS-One Hot + FFT...
    Benchmarking AS-K-mers + Wavelet...
    Benchmarking AS-One Hot + Wavelet...
    Benchmarking PS-K-mers + FFT...
    Benchmarking PS-One Hot + FFT...
    Benchmarking PS-K-mers + Wavelet...
    Benchmarking PS-One Hot + Wavelet...

Processing sample size: 25000
Using complete dataset (25000 sequences)
  AS sequence length: 3200 bp
  PS sequence length: 1600 bp
  Processing 16 encoding methods with 40 runs each...
    Benchmarking AS-One Hot...
    Benchmarking AS-K-mers...
    Benchmarking AS-FFT...
    Benchmarking AS-Wavelet...
    Benchmarking PS-One Hot...
    Benchmarking PS-K-mers...
    Benchmarking PS-FFT...
    Benchmarking PS-Wavelet...
    Computing hybrid encodings...
    Benchmarking AS-K-mers + FFT...
    Benchmarking AS-One Hot + FFT...
    Benchmarking AS-K-mers + Wavelet...
    Benchmarking AS-One Hot + Wavelet...
    Benchmarking PS-K-mers + FFT...
    Benchmarking PS-One Hot + FFT...
    Benchmarking PS-K-mers + Wavelet...
    Benchmarking PS-One Hot + Wavelet...

Combining results...
Results saved to: benchmark_results/encoding_benchmark_results.csv

================================================================================
BENCHMARK SUMMARY
================================================================================

Average Performance by Encoding Method:
                      avg_time  avg_memory_mb  num_sequences
encoding_method                                             
AS-FFT                  1.9574       183.1132          25000
AS-K-mers               3.2507      1652.1000          25000
AS-K-mers + FFT         1.2974       182.9988          25000
AS-K-mers + Wavelet     1.3993       366.5620          25000
AS-One Hot              4.7939      1831.1769          25000
AS-One Hot + FFT        1.4501       915.5351          25000
AS-One Hot + Wavelet    1.0071      1831.4057          25000
AS-Wavelet              2.1744       366.6764          25000
PS-FFT                  1.0093        91.5605          25000
PS-K-mers               1.5815       844.3184          25000
PS-K-mers + FFT         0.6868        91.4460          25000
PS-K-mers + Wavelet     0.8543       183.4565          25000
PS-One Hot              2.3815       915.6495          25000
PS-One Hot + FFT        0.6774       457.7714          25000
PS-One Hot + Wavelet    0.6580       915.8784          25000
PS-Wavelet              1.2549       183.5710          25000

Overall Best Performance:
  Fastest: PS-One Hot + Wavelet (0.2196s, 5000 sequences)
  Most Memory Efficient: PS-K-mers + FFT (30.48MB, 5000 sequences)

AS (Aligned) vs PS (Padded) Comparison:
  AS Average Time: 2.1663s
  PS Average Time: 1.1380s
  AS Average Memory: 916.20MB
  PS Average Memory: 460.46MB

Detailed results saved in: benchmark_results
================================================================================

Benchmark completed successfully!
Check the 'benchmark_results' directory for the CSV file.
You can now generate visualizations using the results.
